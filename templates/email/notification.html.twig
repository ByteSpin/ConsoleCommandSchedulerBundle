{% apply inline_css %}
    <style>
        root {
            font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
            color: #000;
        }
        h1 {
            font-size: 14px;
        }
        p {
            font-size: 12px;
        }
        td {
            border: 1px solid #000000;
        }
    </style>

    <h1><u>Console Command Scheduler:</u> {% if commandName is defined %} {{ commandName }} {% endif %} {% if commandArguments is defined %} {{ commandArguments }} {% endif %}</h1>
    <ul>
        <li>Start date : {% if dateTime is defined %} {{ dateTime }} {% endif %}</li>
        <li>Duration : {% if duration is defined %} {{ duration }} {% endif %}</li>
        <li>Return Code : {% if returnCode is defined %} {{ returnCode }} {% endif %}</li>
    </ul>

    <h3><u>Command details:</u></h3>
    {% if outputs is empty %}
        <p>
            No detailed output was provided!<br/>
            If you want to provide detailed output, don't forget to dispatch the correct ByteSpin event in your commands!<br/>
            For example:<br/>
        </p>
        <pre>
                namespace App\MyCommand;

                use Symfony\Component\Console\Command\Command;
                use Symfony\Component\Console\Input\InputInterface;
                use Symfony\Component\Console\Output\OutputInterface;
                use Symfony\Contracts\EventDispatcher\EventDispatcherInterface;
                use ByteSpin\ConsoleCommandSchedulerBundle\Event\ScheduledConsoleCommandOutputEvent;
                use ByteSpin\ConsoleCommandSchedulerBundle\Converter\DurationConverter;

                public function __construct(
                    private EventDispatcherInterface $dispatcher,
                    private DurationConverter $durationConverter,
                ) {
                    parent::__construct();
                }

                protected function execute(InputInterface $input, OutputInterface $output): int
                {
                // you command code
                $outputText = "Resultat de la commande";



                // event for result recording
                $this->dispatcher->dispatch(new ScheduledConsoleCommandOutputEvent(static::$defaultName, $outputText));

        return Command::SUCCESS;
    }

            </pre>
    {% else %}
        <table>
            <thead>
            <tr>
                <th>Date</th>
                <th>Command</th>
                <th>Arguments</th>
                <th>Duration</th>
                <th>Return Code</th>
                <th>Output</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                {% for item in outputs %}
                    <td>{% if item.dateTime is defined %} {{ item.dateTime }} {% endif %}</td>
                    <td>{% if item.command is defined %} {{ item.command }} {% endif %}</td>
                    <td>{% if item.commandArguments is defined %} {{ item.commandArguments }} {% endif %}</td>
                    <td>{% if item.duration is defined %} {{ item.duration }} {% endif %}</td>
                    <td>{% if item.returnCode is defined %} {{ item.returnCode }} {% endif %}</td>
                    <td>{% if item.commandOutput is defined %} {{ item.commandOutput }} {% endif %}</td>
                {% endfor %}
            </tr>
            </tbody>
        </table>
    {% endif %}
{% endapply %}