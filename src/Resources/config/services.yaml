services:
    ByteSpin\ConsoleCommandSchedulerBundle\Controller\Admin\SchedulerCrudController:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
        arguments:
            $consoleCommandProvider: '@ByteSpin\ConsoleCommandSchedulerBundle\Provider\ConsoleCommandProvider'
            $bundleVersionProvider: '@ByteSpin\ConsoleCommandSchedulerBundle\Provider\BundleVersionProvider'
    ByteSpin\ConsoleCommandSchedulerBundle\Controller\Admin\SchedulerLogCrudController:
        autowire: true
        autoconfigure: true
        public: false
        tags: ['controller.service_arguments']
        arguments:
            $bundleVersionProvider: '@ByteSpin\ConsoleCommandSchedulerBundle\Provider\BundleVersionProvider'
    ByteSpin\ConsoleCommandSchedulerBundle\Provider\ConsoleCommandProvider:
        autowire: true
        autoconfigure: true
        public: false
        arguments:
            $kernel: '@Symfony\Component\HttpKernel\KernelInterface'
    ByteSpin\ConsoleCommandSchedulerBundle\Provider\BundleVersionProvider:
        autowire: true
        autoconfigure: true
        public: false
        arguments:
            $projectDir: '%kernel.project_dir%'
            $cache: '@cache.app'
    ByteSpin\ConsoleCommandSchedulerBundle\Job\JobOutputCollector:
        autowire: true
        autoconfigure: true
        public: false
        shared: true
        arguments:
            $cachePool: '@cache.adapter.filesystem'
    ByteSpin\ConsoleCommandSchedulerBundle\Processor\NotificationProcessor:
        autowire: true
        autoconfigure: true
        public: false
        arguments:
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
            $cachePool: '@cache.adapter.filesystem'
            $mailFrom: '%env(BYTESPIN_FROM_EMAIL)%'
            $schedulerRepository: '@ByteSpin\ConsoleCommandSchedulerBundle\Repository\SchedulerRepository'
    ByteSpin\ConsoleCommandSchedulerBundle\Repository\SchedulerRepository:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
    ByteSpin\ConsoleCommandSchedulerBundle\Scheduler\ConsoleJobsScheduler:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
        arguments:
            $schedulerRepository: '@ByteSpin\ConsoleCommandSchedulerBundle\Repository\SchedulerRepository'
            $kernel: '@Symfony\Component\HttpKernel\KernelInterface'
            $cache: '@Symfony\Contracts\Cache\CacheInterface'
            $lockFactory: '@Symfony\Component\Lock\LockFactory'
    ByteSpin\ConsoleCommandSchedulerBundle\EventSubscriber\ScheduledConsoleCommandEventSubscriber:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
        arguments:
            $managerRegistry: '@Doctrine\Persistence\ManagerRegistry'
            $notificationProcessor: '@ByteSpin\ConsoleCommandSchedulerBundle\Processor\NotificationProcessor'
    ByteSpin\ConsoleCommandSchedulerBundle\EventSubscriber\ScheduledConsoleCommandOutputEventSubscriber:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
        arguments:
            $outputCollector: '@ByteSpin\ConsoleCommandSchedulerBundle\Job\JobOutputCollector'
    ByteSpin\ConsoleCommandSchedulerBundle\EventSubscriber\SchedulerEasyAdminEventSubscriber:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'doctrine.event_subscriber' ]
    ByteSpin\ConsoleCommandSchedulerBundle\MessageHandler\ExecuteConsoleCommandHandler:
        autowire: true
        autoconfigure: true
        public: false
        tags: [ 'controller.service_arguments' ]
        arguments:
            $eventDispatcher: '@Symfony\Component\EventDispatcher\EventDispatcherInterface'
            $durationConverter: '@ByteSpin\ConsoleCommandSchedulerBundle\Converter\DurationConverter'
    ByteSpin\ConsoleCommandSchedulerBundle\Command\ConfigureBundleCommand:
        tags:
            - { name: 'console.command', command: 'bytespin:configure-console-command-scheduler' }
    ByteSpin\ConsoleCommandSchedulerBundle\Converter\DurationConverter:
        autowire: true
        autoconfigure: true
        public: false


